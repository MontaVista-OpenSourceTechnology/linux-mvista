/*
 * Copyright 2020 Keith & Koep GmbH
 */

/*
Switches:

*/

#include "imx8mm.dtsi"
#include "tanaro-pinfunc.h"

/ {
	aliases {
		rtc0 = &rtc;
		rtc1 = &snvs_rtc;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		rpmsg_reserved: rpmsg@0xb8000000 {
			no-map;
			reg = <0 0xb8000000 0 0x400000>;
		};
	};

	pcie0_refclk: pcie0-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	mcp25xxfd_osc: mcp25xxfd_osc {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <40000000>;
	};

	reg_vin_fused: vin_fused {
		compatible = "regulator-fixed";
		regulator-name = "VIN_FUSED";
		regulator-min-microvolt = <12000000>;
		regulator-max-microvolt = <12000000>;
		regulator-always-on;
	};

	reg_board_5v: 5v {
		compatible = "regulator-fixed";
		regulator-name = "+5V";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
		vin-supply = <&reg_vin_fused>;
	};

	reg_board_5v_iso: 5v_iso {
		compatible = "regulator-fixed";
		regulator-name = "+5V_ISO";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_5v_iso_enable>;
		gpio = <&gpio3 6 1>;
		enable-active-high;
		regulator-always-on;
		vin-supply = <&reg_board_5v>;
	};

	reg_keypad_pwr: keypad-pwr {
		compatible = "regulator-fixed";
		regulator-name = "Keypad PWR";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_keypad_pen>;
		gpio = <&gpio5 5 1>;
		enable-active-high;
		regulator-always-on;
		vin-supply = <&reg_board_5v>;
	};

	reg_usb1_pwr: usb1-pwr {
		compatible = "regulator-fixed";
		regulator-name = "USB1 PWR";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usb1_enable>;
		gpio = <&gpio1 12 1>;
		enable-active-high;
		vin-supply = <&reg_board_5v>;
	};

	reg_usb2_pwr: usb2-pwr {
		compatible = "regulator-fixed";
		regulator-name = "USB2 PWR";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usb2_enable>;
		gpio = <&gpio1 14 1>;
		enable-active-high;
		regulator-always-on;
		vin-supply = <&reg_board_5v>;
	};

	reg_usdhc1_vmmc: usdhc1_vmmc {
		compatible = "regulator-fixed";
		regulator-name = "VMMC_USDHC1";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

	reg_usdhc2_vmmc: regulator-usdhc2 {
		compatible = "regulator-fixed";
		regulator-name = "VMMC_USDHC2";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

	reg_usdhc2_vqmmc: regulator-usdhc2-vqmmc {
		compatible = "regulator-gpio";
		regulator-name = "VDDIO_USDHC2";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sd_vsel>;
		gpios = <&gpio4 22 GPIO_ACTIVE_HIGH>;
		gpios-states = <1>;
		states = <1800000 1>, <3300000 0>;
	};

	reg_usdhc3_vmmc: regulator-usdhc3 {
		compatible = "regulator-fixed";
		regulator-name = "VMMC_USDHC3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

	reg_audio_pwr: audio-pwr {
		compatible = "regulator-fixed";
		regulator-name = "AUDIO PWR";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_audio_enable>;
		gpio = <&gpio1 8 1>;
		enable-active-high;
		regulator-always-on;
		vin-supply = <&reg_board_5v>;
	};

	sound-tas2552 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "tas2552-audio";
		simple-audio-card,format = "i2s";
		simple-audio-card,frame-master = <&cpudai>;
		simple-audio-card,bitclock-master = <&cpudai>;

		cpudai: simple-audio-card,cpu {
			sound-dai = <&sai2>;
			dai-tdm-slot-num = <2>;
			dai-tdm-slot-width = <32>;
		};

		simple-audio-card,codec {
			sound-dai = <&tas2552>;
			clocks = <&clk IMX8MM_CLK_SAI2_ROOT>;
		};
	};

	backlight1: backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 100000 0>;
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		status = "okay";
	};

	leds {
		compatible = "gpio-leds";

		status_led {
			pinctrl-names         = "default";
			pinctrl-0             = <&pinctrl_led_status>;
			label                 = "Tanaro:green";
			linux,default-trigger = "heartbeat";
			gpios                 = <&gpio5 2 0>;
		};
	};
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_backlight_pwm1>;
	status = "okay";
};

&backlight1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_backlight_enable>;
	enable-gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
};

&A53_0 {
	cpu-supply = <&buck2_reg>;
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0>;
			at803x,eee-disabled;
			at803x,vddio-1p8v;
		};
	};
};

&pcie0{
	pinctrl-names   = "default";
	pinctrl-0       = <&pinctrl_pcie0>;
	disable-gpio    = <&gpio3 3 GPIO_ACTIVE_LOW>;
	reset-gpio      = <&gpio4 11 GPIO_ACTIVE_LOW>;
	clocks          = <&clk IMX8MM_CLK_PCIE1_ROOT>,
			<&clk IMX8MM_CLK_PCIE1_AUX>,
			<&clk IMX8MM_CLK_PCIE1_PHY>,
			<&pcie0_refclk>;
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	hard-wired      = <1>;
	ext_osc         = <0>;
	reserved-region = <&rpmsg_reserved>;
	status = "okay";
};

&sai2 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clk IMX8MM_CLK_SAI2>;
	assigned-clock-parents = <&clk IMX8MM_AUDIO_PLL2_OUT>;
	assigned-clock-rates = <22579200>;
	status = "okay";
};

&snvs_pwrkey {
	status = "disabled";
};

&uart1 {    /* UART1 as RS232 or UART*/
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MM_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&uart2 {    /* UART2 as RS485_1 or UART */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2 &pinctrl_rs485_1_de>;
	assigned-clocks = <&clk IMX8MM_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	status = "okay";

	// RS485 Mode
	rts-gpios = <&gpio3 9 GPIO_ACTIVE_HIGH>; // GPIO to control the transmitter
	// rs485-rx-during-tx;  // Halfduplex vs Fullduplex ?

	// UART Mode
	//uart-has-rtscts; // Not used in RS485 mode.
};

&uart3 {    /* UART3 to BTUART or UART3 (default: UART3). UART3 to as UART or RS232_xx_MDB*/
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MM_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&uart4 {    /* UART4 to BT_UART or RS485_2 or UART (default: BTUART)*/
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MM_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	status = "okay";
};


&usbotg1 {
	dr_mode = "otg";
	vbus-supply = <&reg_usb1_pwr>;
	disable-over-current;
	hnp-disable;
	srp-disable;
	adp-disable;
	picophy,pre-emp-curr-control = <3>;
	picophy,dc-vol-level-adjust = <7>;
	status = "okay";
};

&usbotg2 {
	dr_mode = "host";
	vbus-supply = <&reg_usb2_pwr>;
	disable-over-current;
	hnp-disable;
	srp-disable;
	adp-disable;
	usb-role-switch;
	picophy,pre-emp-curr-control = <3>;
	picophy,dc-vol-level-adjust = <7>;
	status = "okay";
};

&usdhc1 {   /* eMMC */
	assigned-clock-rates = <200000000>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>, <&pinctrl_usdhc1_gpio>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>, <&pinctrl_usdhc1_gpio>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>, <&pinctrl_usdhc1_gpio>;
	bus-width = <8>;
	vmmc-supply = <&reg_usdhc1_vmmc>;
	non-removable;
	status = "okay";
};

&usdhc2 {   /* SD-Card Slot */
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio2 20 GPIO_ACTIVE_HIGH>;
	bus-width = <4>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	pm-ignore-notify;
	keep-power-in-suspend;
	vqmmc-supply = <&reg_usdhc2_vqmmc>;
	status = "okay";
};

&usdhc3 {   /* Wifi/BT module */
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>, <&pinctrl_usdhc3_gpio>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>, <&pinctrl_usdhc3_gpio>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>, <&pinctrl_usdhc3_gpio>;
	bus-width = <4>;
	vmmc-supply = <&reg_usdhc3_vmmc>;
	pm-ignore-notify;
	keep-power-in-suspend;
	non-removable;
	no-1-8-v;
	status = "okay";
};

&ecspi2 {
	#address-cells = <1>;
	#size-cells = <0>;
	fsl,spi-num-chipselects = <1>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2 &pinctrl_ecspi2_cs>;
	cs-gpios = <&gpio5 13 GPIO_ACTIVE_LOW>;
	status = "okay";

	mcp25xxfd: mcp25xxfd@0 {
		compatible = "microchip,mcp2518fd";
		reg = <0>;
		clocks = <&mcp25xxfd_osc>;
		interrupt-parent = <&gpio5>;
		interrupts = <4 IRQ_TYPE_LEVEL_LOW>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_mcp25xxfd_int>;
		spi-max-frequency = <10000000>;
		status = "okay";
	};
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&i2c1 { /* Camera and Keypad */
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c1>;
	pinctrl-1 = <&pinctrl_i2c1_gpio>;
	scl-gpios = <&gpio5 14 GPIO_ACTIVE_HIGH>;
	sda-gpios = <&gpio5 15 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&i2c2 { /* Touch */
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	stmpe811@41 {
		compatible = "st,stmpe811";
		reg = <0x41>;
		#address-cells = <1>;
		#size-cells = <0>;

		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_touchint>;
		interrupts = <4 IRQ_TYPE_LEVEL_LOW>;
		interrupt-parent = <&gpio3>;
		interrupt-controller;

		id = <0>;
		blocks = <0x5>;
		irq-trigger = <0x1>;
		/* Common ADC settings */
		/* 3.25 MHz ADC clock speed */
		st,adc-freq = <1>;
		/* 12-bit ADC */
		st,mod-12b = <1>;
		/* internal ADC reference */
		st,ref-sel = <0>;
		/* ADC converstion time: 80 clocks */
		st,sample-time = <4>;

		status = "disabled";

		stmpe_touchscreen {
			compatible = "st,stmpe-ts";
			reg = <0>;
			/* 8 sample average control */
			st,ave-ctrl = <3>;
			/* 5 ms touch detect interrupt delay */
			st,touch-det-delay = <5>;
			/* 1 ms panel driver settling time */
			st,settling = <3>;
			/* 7 length fractional part in z */
			st,fraction-z = <7>;
			/*
			 * 50 mA typical 80 mA max touchscreen drivers
			 * current limit value
			 */
			st,i-drive = <1>;
		};

		stmpe_adc {
			compatible = "st,stmpe-adc";
			st,norequest-mask = <0x0F>;
		};
	};
};

&i2c3 { /* Internal I2C */
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";

	/*
		The TANARO has two different options for the RTC.
		Which RTC is present is determined during the
		images post-install action. The "rtc" node is
		then updated via an overlay.
		The node has to be updated this way, because
		changing the alias doesn't work and we need
		the RTC to be present as rtc0 (a requirement
		of the hwclock utility).
	*/
	rtc: rtc {
		status = "disabled";
	};

	tas2552: tas2552@40 {
		#sound-dai-cells = <0>;
		compatible = "ti,tas2552";
		reg = <0x40>;
		vbat-supply = <&reg_board_5v>;
		iovdd-supply = <&buck4_reg>;
		avdd-supply = <&buck5_reg>;
		enable-gpio = <&gpio1 8 GPIO_ACTIVE_HIGH>;
	};

	/*
		We are still missing a driver for the A71CH.
		For now, we add the secure element as dummy
		device to the bus.
	*/
	secure_element: a71cf@48 {
		compatible = "";
		pinctrl-0 = <&pinctrl_secure_element>;
		pinctrl-names = "default";
		reg = <0x48>;
		status = "disabled";
	};

	pmic@4b {
		compatible = "rohm,bd71847";
		reg = <0x4b>;
		rohm,reset-snvs-powered;

		regulators {
			buck1_reg: BUCK1 {  // VDD_SOC_0V8
				regulator-name = "BUCK1";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1300000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <1250>;
			};

			buck2_reg: BUCK2 {  // VDD_SOC_0V9
				regulator-name = "BUCK2";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1300000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <1250>;
				rohm,dvs-run-voltage = <1000000>;
				rohm,dvs-idle-voltage = <900000>;
			};

			buck3_reg: BUCK3 {  // VDD_DRAM_PU_0V9
				// BUCK5 in datasheet
				regulator-name = "BUCK3";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1350000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck4_reg: BUCK4 {  // +3V3_AUX
				// BUCK6 in datasheet
				regulator-name = "BUCK4";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5_reg: BUCK5 {  // VDD_1V8
				// BUCK7 in datasheet
				regulator-name = "BUCK5";
				regulator-min-microvolt = <1605000>;
				regulator-max-microvolt = <1995000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6_reg: BUCK6 {  // NVCC_DRAM_1V1
				// BUCK8 in datasheet
				regulator-name = "BUCK6";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1_reg: LDO1 {    // NVCC_SNVS_1V8
				regulator-name = "LDO1";
				regulator-min-microvolt = <1600000>;
				regulator-max-microvolt = <1900000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2_reg: LDO2 {    // VDD_SNVS_0V8
				regulator-name = "LDO2";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <900000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3_reg: LDO3 {    // VDDA_1V8
				regulator-name = "LDO3";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4_reg: LDO4 {    // VDD_PHY_0V9
				regulator-name = "LDO4";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5_reg: LDO5 {    // VDD_FPGA_MIPI
				regulator-name = "LDO5";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo6_reg: LDO6 {    // VDD_PHY_1V2
				regulator-name = "LDO6";
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};

	sensor@4e {
		compatible = "ti,tmp75b";
		reg = <0x4E>;
	};

	eeprom@50 {
		compatible = "atmel,24c32";
		reg = <0x50>;
		pagesize = <32>;
	};
};


&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	pinctrl_hog: hoggrp {
		fsl,pins = <
			CAMERA_PWDN		PAD_GPIO_PU   /* Camera Pwdn  */
			CAMERA_RESET		PAD_GPIO_PU   /* Camera nRST  */
			>;
	};

	pinctrl_fec1: fec1grp {
		fsl,pins = <
			MX8MM_IOMUXC_ENET_MDC_ENET1_MDC			0x3
			MX8MM_IOMUXC_ENET_MDIO_ENET1_MDIO		0x3
			MX8MM_IOMUXC_ENET_TD3_ENET1_RGMII_TD3		0x1f
			MX8MM_IOMUXC_ENET_TD2_ENET1_RGMII_TD2		0x1f
			MX8MM_IOMUXC_ENET_TD1_ENET1_RGMII_TD1		0x1f
			MX8MM_IOMUXC_ENET_TD0_ENET1_RGMII_TD0		0x1f
			MX8MM_IOMUXC_ENET_RD3_ENET1_RGMII_RD3		0x91
			MX8MM_IOMUXC_ENET_RD2_ENET1_RGMII_RD2		0x91
			MX8MM_IOMUXC_ENET_RD1_ENET1_RGMII_RD1		0x91
			MX8MM_IOMUXC_ENET_RD0_ENET1_RGMII_RD0		0x91
			MX8MM_IOMUXC_ENET_TXC_ENET1_RGMII_TXC		0x1f
			MX8MM_IOMUXC_ENET_RXC_ENET1_RGMII_RXC		0x91
			MX8MM_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x91
			MX8MM_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x1f
			MX8MM_IOMUXC_GPIO1_IO09_GPIO1_IO9		0x19    /* ENET_RESET */
			MX8MM_IOMUXC_GPIO1_IO10_GPIO1_IO10		0x19    /* ENET_WOL */
			MX8MM_IOMUXC_GPIO1_IO11_GPIO1_IO11		0x19    /* ENET_INT */
		>;
	};

	pinctrl_keypad: keypad_grp {
		fsl,pins = <
			MX8MM_IOMUXC_SAI1_RXC_GPIO4_IO1		0x00000116
			MX8MM_IOMUXC_SAI1_RXFS_GPIO4_IO0	0x00000116
			MX8MM_IOMUXC_SAI3_RXFS_GPIO4_IO28	0x00000116
			MX8MM_IOMUXC_SAI3_TXC_GPIO5_IO0		0x00001916
			MX8MM_IOMUXC_SAI3_TXD_GPIO5_IO1		0x00000116
			MX8MM_IOMUXC_SPDIF_TX_GPIO5_IO3		0x00000116
		>;
	};

	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX8MM_IOMUXC_I2C1_SCL_I2C1_SCL			0x400001c3
			MX8MM_IOMUXC_I2C1_SDA_I2C1_SDA			0x400001c3
		>;
	};

	pinctrl_i2c1_gpio: i2c1_gpio_grp {
		fsl,pins = <
			MX8MM_IOMUXC_I2C1_SCL_GPIO5_IO14	0x00000116
			MX8MM_IOMUXC_I2C1_SDA_GPIO5_IO15	0x00000116
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MM_IOMUXC_I2C2_SCL_I2C2_SCL			0x400001c3
			MX8MM_IOMUXC_I2C2_SDA_I2C2_SDA			0x400001c3
		>;
	};

	pinctrl_touchint: touchintgrp {
		fsl,pins = <
			MX8MM_IOMUXC_NAND_CE3_B_GPIO3_IO4       0x00000016  /* TOUCH_INT */
		>;
	};

	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MM_IOMUXC_I2C3_SCL_I2C3_SCL			0x400001c3
			MX8MM_IOMUXC_I2C3_SDA_I2C3_SDA			0x400001c3
		>;
	};

	pinctrl_pcie0: pcie0grp {
		fsl,pins = <
			MX8MM_IOMUXC_NAND_CE2_B_GPIO3_IO3	    0x41       /* PCIE_W_DISABLE     */
			MX8MM_IOMUXC_SAI1_TXC_GPIO4_IO11	    0x00000116 /* PCIE_RESET         */
			MX8MM_IOMUXC_NAND_CE1_B_GPIO3_IO2	    0x41       /* PCIE_WAKE          */
			>;
	};

	pinctrl_sai2: sai2grp {
		fsl,pins = <
			MX8MM_IOMUXC_SAI2_TXFS_SAI2_TX_SYNC	    0xd6
			MX8MM_IOMUXC_SAI2_TXC_SAI2_TX_BCLK	    0xd6
			MX8MM_IOMUXC_SAI2_MCLK_SAI2_MCLK	    0xd6
			MX8MM_IOMUXC_SAI2_TXD0_SAI2_TX_DATA0	0xd6
			MX8MM_IOMUXC_SAI2_RXD0_SAI2_RX_DATA0	0xd6
		>;
	};

	pinctrl_uart1: uart1grp {   /* UART1 as RS232 or UART*/
		fsl,pins = <
			MX8MM_IOMUXC_UART1_RXD_UART1_DCE_RX	0x140
			MX8MM_IOMUXC_UART1_TXD_UART1_DCE_TX	0x140
			MX8MM_IOMUXC_UART3_RXD_UART1_DCE_CTS_B	0x140   /* RTS */
			MX8MM_IOMUXC_UART3_TXD_UART1_DCE_RTS_B	0x140   /* CTS */
		>;
	};

	pinctrl_uart2: uart2grp {   /* UART2 as RS485_1 or UART */
		fsl,pins = <
			MX8MM_IOMUXC_UART2_RXD_UART2_DCE_RX     0x140
			MX8MM_IOMUXC_UART2_TXD_UART2_DCE_TX     0x140
			MX8MM_IOMUXC_SAI3_RXC_UART2_DCE_CTS_B   0x140   /* RTS */
			MX8MM_IOMUXC_SAI3_RXD_UART2_DCE_RTS_B   0x140   /* CTS */
		>;
	};

	pinctrl_uart3: uart3grp {   /* UART3 to BTUART or UART3 (default: UART3). UART3 to as UART or RS232_xx_MDB*/
		fsl,pins = <
			MX8MM_IOMUXC_ECSPI1_SCLK_UART3_DCE_RX		0x140  /* RXD */
			MX8MM_IOMUXC_ECSPI1_MOSI_UART3_DCE_TX		0x140  /* TXD */
			MX8MM_IOMUXC_ECSPI1_MISO_UART3_DCE_CTS_B	0x140  /* RTS */
			MX8MM_IOMUXC_ECSPI1_SS0_UART3_DCE_RTS_B		0x140  /* CTS */
		>;
	};

	pinctrl_uart4: uart4grp {   /* UART4 to BT_UART or RS485_2 or UART (default: BTUART)*/
		fsl,pins = <
			MX8MM_IOMUXC_UART4_RXD_UART4_DCE_RX	0x140
			MX8MM_IOMUXC_UART4_TXD_UART4_DCE_TX	0x140
			MX8MM_IOMUXC_NAND_DATA02_GPIO3_IO8	0x140   /* DE/CTS; DE for RS485, CTS for BT */
		>;
	};

	pinctrl_usdhc1_gpio: usdhc1grpgpio {
		fsl,pins = <
			MX8MM_IOMUXC_SD1_RESET_B_USDHC1_RESET_B	0xc1
		>;
	};

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX8MM_IOMUXC_SD1_CLK_USDHC1_CLK		0x190
			MX8MM_IOMUXC_SD1_CMD_USDHC1_CMD		0x1d0
			MX8MM_IOMUXC_SD1_DATA0_USDHC1_DATA0	0x1d0
			MX8MM_IOMUXC_SD1_DATA1_USDHC1_DATA1	0x1d0
			MX8MM_IOMUXC_SD1_DATA2_USDHC1_DATA2	0x1d0
			MX8MM_IOMUXC_SD1_DATA3_USDHC1_DATA3	0x1d0
			MX8MM_IOMUXC_SD1_DATA4_USDHC1_DATA4	0x1d0
			MX8MM_IOMUXC_SD1_DATA5_USDHC1_DATA5	0x1d0
			MX8MM_IOMUXC_SD1_DATA6_USDHC1_DATA6	0x1d0
			MX8MM_IOMUXC_SD1_DATA7_USDHC1_DATA7	0x1d0
			MX8MM_IOMUXC_SD1_STROBE_USDHC1_STROBE	0x190
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
		fsl,pins = <
			MX8MM_IOMUXC_SD1_CLK_USDHC1_CLK		0x190
			MX8MM_IOMUXC_SD1_CMD_USDHC1_CMD		0x1d0
			MX8MM_IOMUXC_SD1_DATA0_USDHC1_DATA0	0x1d0
			MX8MM_IOMUXC_SD1_DATA1_USDHC1_DATA1	0x1d0
			MX8MM_IOMUXC_SD1_DATA2_USDHC1_DATA2	0x1d0
			MX8MM_IOMUXC_SD1_DATA3_USDHC1_DATA3	0x1d0
			MX8MM_IOMUXC_SD1_DATA4_USDHC1_DATA4	0x1d0
			MX8MM_IOMUXC_SD1_DATA5_USDHC1_DATA5	0x1d0
			MX8MM_IOMUXC_SD1_DATA6_USDHC1_DATA6	0x1d0
			MX8MM_IOMUXC_SD1_DATA7_USDHC1_DATA7	0x1d0
			MX8MM_IOMUXC_SD1_STROBE_USDHC1_STROBE	0x190
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
		fsl,pins = <
			MX8MM_IOMUXC_SD1_CLK_USDHC1_CLK		0x190
			MX8MM_IOMUXC_SD1_CMD_USDHC1_CMD		0x1d0
			MX8MM_IOMUXC_SD1_DATA0_USDHC1_DATA0	0x1d0
			MX8MM_IOMUXC_SD1_DATA1_USDHC1_DATA1	0x1d0
			MX8MM_IOMUXC_SD1_DATA2_USDHC1_DATA2	0x1d0
			MX8MM_IOMUXC_SD1_DATA3_USDHC1_DATA3	0x1d0
			MX8MM_IOMUXC_SD1_DATA4_USDHC1_DATA4	0x1d0
			MX8MM_IOMUXC_SD1_DATA5_USDHC1_DATA5	0x1d0
			MX8MM_IOMUXC_SD1_DATA6_USDHC1_DATA6	0x1d0
			MX8MM_IOMUXC_SD1_DATA7_USDHC1_DATA7	0x1d0
			MX8MM_IOMUXC_SD1_STROBE_USDHC1_STROBE	0x190
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2grpgpio {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CD_B_GPIO2_IO12	0x1c4   /* SD2_DET */
			MX8MM_IOMUXC_SD2_WP_GPIO2_IO20		0x1c4   /* SD2_WP */
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x190
			MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d0
			MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d0
			MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d0
			MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d0
			MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d0
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x194
			MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d4
			MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d4
			MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d4
			MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d4
			MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d4
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x196
			MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d6
			MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d6
			MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d6
			MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d6
			MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d6
		>;
	};

	pinctrl_sd_vsel: sdvselgrp {
		 fsl,pins = < MX8MM_IOMUXC_SAI2_RXC_GPIO4_IO22	0x16 >;
	};

	pinctrl_usdhc3_gpio: usdhc3grpgpio {
		fsl,pins = <
			MX8MM_IOMUXC_GPIO1_IO07_GPIO1_IO7	0x1c4   /* WL_HOST_WAKE */
			MX8MM_IOMUXC_I2C4_SDA_GPIO5_IO21    0x1c4   /* WL_DIS */
			MX8MM_IOMUXC_NAND_RE_B_GPIO3_IO15   0x1c4   /* BT_WAKE */
			MX8MM_IOMUXC_NAND_ALE_GPIO3_IO0     0x1c4   /* BT_HOST_WAKE */
			MX8MM_IOMUXC_I2C4_SCL_GPIO5_IO20    0x1c4   /* BT_DIS */
		>;
	};

	pinctrl_usdhc3: usdhc3grp {
		fsl,pins = <
			MX8MM_IOMUXC_NAND_WE_B_USDHC3_CLK       0x190
			MX8MM_IOMUXC_NAND_WP_B_USDHC3_CMD	    0x1d0
			MX8MM_IOMUXC_NAND_DATA04_USDHC3_DATA0	0x1d0
			MX8MM_IOMUXC_NAND_DATA05_USDHC3_DATA1	0x1d0
			MX8MM_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d0
			MX8MM_IOMUXC_NAND_DATA07_USDHC3_DATA3	0x1d0
		>;
	};

	pinctrl_usdhc3_100mhz: usdhc3grp100mhz {
		fsl,pins = <
			MX8MM_IOMUXC_NAND_WE_B_USDHC3_CLK	0x194
			MX8MM_IOMUXC_NAND_WP_B_USDHC3_CMD	0x1d4
			MX8MM_IOMUXC_NAND_DATA04_USDHC3_DATA0	0x1d4
			MX8MM_IOMUXC_NAND_DATA05_USDHC3_DATA1	0x1d4
			MX8MM_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d4
			MX8MM_IOMUXC_NAND_DATA07_USDHC3_DATA3	0x1d4
		>;
	};

	pinctrl_usdhc3_200mhz: usdhc3grp200mhz {
		fsl,pins = <
			MX8MM_IOMUXC_NAND_WE_B_USDHC3_CLK	0x196
			MX8MM_IOMUXC_NAND_WP_B_USDHC3_CMD	0x1d6
			MX8MM_IOMUXC_NAND_DATA04_USDHC3_DATA0	0x1d6
			MX8MM_IOMUXC_NAND_DATA05_USDHC3_DATA1	0x1d6
			MX8MM_IOMUXC_NAND_DATA06_USDHC3_DATA2	0x1d6
			MX8MM_IOMUXC_NAND_DATA07_USDHC3_DATA3	0x1d6
		>;
	};

	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			MX8MM_IOMUXC_ECSPI2_SCLK_ECSPI2_SCLK		0x82
			MX8MM_IOMUXC_ECSPI2_MOSI_ECSPI2_MOSI		0x82
			MX8MM_IOMUXC_ECSPI2_MISO_ECSPI2_MISO		0x82
		>;
	};

	pinctrl_mcp25xxfd_int: mcp25xxfdintgrp {
		fsl,pins = < MX8MM_IOMUXC_SPDIF_RX_GPIO5_IO4	0x80000000 >;
	};

	pinctrl_ecspi2_cs: ecspi2cs {
		fsl,pins = < MX8MM_IOMUXC_ECSPI2_SS0_GPIO5_IO13		0x40000 >;
	};

	pinctrl_backlight_pwm1: pwm-backlight {
		fsl,pins = < MX8MM_IOMUXC_GPIO1_IO01_PWM1_OUT	0x16 >;	/* BL_PWM */
	};

	pinctrl_backlight_enable: backlight-enable {
		fsl,pins = < MX8MM_IOMUXC_GPIO1_IO04_GPIO1_IO4  0x16 >;	/* BL_EN */
	};

	pinctrl_wdog: wdoggrp {
		fsl,pins = < MX8MM_IOMUXC_GPIO1_IO02_WDOG1_WDOG_B	0xc6 >;
	};

	pinctrl_led_status: led-status {
		fsl,pins = < MX8MM_IOMUXC_SAI3_MCLK_GPIO5_IO2		0xc6 >;
	};

	pinctrl_5v_iso_enable: 5v-iso-enable {
		fsl,pins = < MX8MM_IOMUXC_NAND_DATA00_GPIO3_IO6		PAD_GPIO >;
	};

	pinctrl_rs485_1_de: rs485-1-de {
		fsl,pins = < MX8MM_IOMUXC_NAND_DATA03_GPIO3_IO9		PAD_GPIO >;
	};

	pinctrl_keypad_pen: keypad-enable {
		fsl,pins = < MX8MM_IOMUXC_SPDIF_EXT_CLK_GPIO5_IO5	PAD_GPIO >;
	};

	pinctrl_usb1_enable: usb1-enable {
		fsl,pins = < MX8MM_IOMUXC_GPIO1_IO12_GPIO1_IO12		PAD_GPIO >;
	};

	pinctrl_usb2_enable: usb2-enable {
		fsl,pins = < MX8MM_IOMUXC_GPIO1_IO14_GPIO1_IO14		PAD_GPIO >;
	};

	pinctrl_audio_enable: audio-enable {
		fsl,pins = < MX8MM_IOMUXC_GPIO1_IO08_GPIO1_IO8		PAD_GPIO_PU >;
	};

	pinctrl_secure_element: secure-element {
		fsl,pins = <
			MX8MM_IOMUXC_NAND_DQS_GPIO3_IO14	0x00000116 /* Reset */
		>;
	};
};

&gpio3 {
	gpio-line-names = "", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "TPM_RESET", "",
			"", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "";
};

&gpio4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_keypad>;
	gpio-line-names = "KP7", "KP8", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "",
			"", "", "", "", "KP5", "", "", "";
};

&gpio5 {
	gpio-line-names = "KP3", "KP4", "", "KP6", "", "", "", "",
			"", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "",
			"", "", "", "", "", "", "", "";
};

&lcdif {
	status = "okay";
};

&vpu_g1 {
	status = "okay";
};

&vpu_g2 {
	status = "okay";
};

&vpu_h1 {
	status = "okay";
};

&gpu {
	status = "okay";
};
