/*
 * Copyright 2023 SECO Northern Europe GmbH
 */

/*
Switches:

    ETHERNET_ONLY_100MBIT		Reduce Ethernet to 100MBit in case extra lanes for 1GBit are not connected on the baseboard.


*/

#include "imx8mp.dtsi"
#include "trizeps8plus-pinfunc.h"

#define TRIZEPS_HOGGRP_COMMON

/ {
	firmware {
		android {
			compatible = "android,firmware";
			/* default emmc node used for GSI */
			boot_devices         = "soc@0/soc@0:bus@30800000/30b40000.mmc";
			/* sd card node which used if androidboot.boot_device_root=mmcblk0 */
			boot_devices_mmcblk0 = "soc@0/soc@0:bus@30800000/30b40000.mmc";
			/* emmc node which used if androidboot.boot_device_root=mmcblk2 */
			/* boot_devices_mmcblk2 = "soc@0/soc@0:bus@30800000/30b60000.mmc"; */
			boot_devices_mmcblk1 = "soc@0/soc@0:bus@30800000/30b50000.mmc";
			fstab {
				compatible = "android,fstab";
				system {
					compatible = "android,system";
					dev = "system";
					type = "ext4";
					mnt_flags = "noatime,errors=panic,ro,barrier=1,inode_readahead_blks=8";
					fsmgr_flags = "wait,slotselect,avb,avb_keys=/avb,logical,first_stage_mount";
				};
				system_ext {
					compatible = "android,system_ext";
					dev = "system_ext";
					type = "ext4";
					mnt_flags = "noatime,ro,errors=panic";
					fsmgr_flags = "wait,slotselect,avb,logical,first_stage_mount";
				};
				vendor {
					compatible = "android,vendor";
					dev = "vendor";
					type = "ext4";
					mnt_flags = "noatime,errors=panic,ro,barrier=1,inode_readahead_blks=8";
					fsmgr_flags = "wait,slotselect,avb,logical,first_stage_mount";
				};
				product {
					compatible = "android,product";
					dev = "product";
					type = "ext4";
					mnt_flags = "noatime,errors=panic,ro,barrier=1,inode_readahead_blks=8";
					fsmgr_flags = "wait,slotselect,avb,logical,first_stage_mount";
				};
				metadata {
					compatible = "android,metadata";
					dev = "/dev/block/by-name/metadata";
					type = "ext4";
					mnt_flags = "noatime,nosuid,nodev,discard,sync";
					fsmgr_flags = "wait,formattable,first_stage_mount,check";
				};
			};

			vbmeta {
				/*we need use FirstStageMountVBootV2 if we enable avb*/
				compatible = "android,vbmeta";
				/*parts means the partition witch can be mount in first stage*/
				parts = "vbmeta,dtbo,boot,system,vendor,product";
			};
		};
	};
};

#if 0
/ {
	trusty {
		compatible = "android,trusty-smc-v1";
		ranges;
		#address-cells = <2>;
		#size-cells = <2>;
		trusty-irq {
			compatible = "android,trusty-irq-v1";
			interrupt-templates = <&trusty_ipi 0>;
			interrupt-ranges = < 0 15 0>;
		};
		trusty-virtio {
			compatible = "android,trusty-virtio-v1";
		};
		trusty-log {
			compatible = "android,trusty-log-v1";
		};
	};

	trusty_ipi: interrupt-controller@0 {
		compatible = "android,CustomIPI";
		interrupt-controller;
		#interrupt-cells = <1>;
	};
};
#endif

/ {

	chosen {
		stdout-path = &uart1;
	};

	memory@40000000 {
		device_type = "memory";
		reg = <0x0 0x40000000 0 0x80000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		rpmsg_reserved: rpmsg@0xb8000000 {
			no-map;
			reg = <0 0xb8000000 0 0x400000>;
		};
	};

	panel_lvds: panel {
		status          = "disabled";
		compatible      = "panel-lvds";
		backlight = <&backlight1>;
	};

	pcie_refclk: pcie-refclk {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	phy_reset: phy-reset {
		compatible = "gpio-reset";
		reset-gpios = <enet_reset_gpio GPIO_ACTIVE_LOW>;
		reset-delay-us = <2000>;
		reset-post-delay-ms = <40>;
		#reset-cells = <0>;
	};

	reg_usdhc1_vmmc: usdhc1_vmmc {
		compatible = "regulator-fixed";
		regulator-name = "VMMC_USDHC1";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

	reg_usdhc2_vmmc: regulator-usdhc2 {
		compatible = "regulator-fixed";
		regulator-name = "VMMC_USDHC2";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		enable-active-high;
	};

#if defined(TRIZEPS8MINI_BT_SCO_XTOR) && (TRIZEPS8MINI_BT_SCO_XTOR==1)
	sound-xtor {
		compatible = "fsl,imx-audio-xtor";
		model = "xtor-audio";
		cpu-dai = <&sai3>;
		status = "okay";
	};
#else
#if 0
	bt_sco_codec: bt_sco_codec {
		#sound-dai-cells = <0>;
		compatible = "linux,bt-sco";
	};

	sound-bt-sco {
		compatible = "simple-audio-card";
		simple-audio-card,name = "bt-sco-audio";
		simple-audio-card,format = "i2s";
		simple-audio-card,bitclock-inversion;
		simple-audio-card,frame-master = <&btcpu>;
		simple-audio-card,bitclock-master = <&btcpu>;

		btcpu: simple-audio-card,cpu {
			sound-dai = <&sai2>;
			dai-tdm-slot-num = <2>;
			dai-tdm-slot-width = <16>;
		};

		simple-audio-card,codec {
			sound-dai = <&bt_sco_codec>;
		};
	};
#endif
#endif
		sound_hdmi: sound-hdmi {
			compatible = "fsl,imx-audio-cdnhdmi";
			model = "audio-hdmi";
			audio-cpu = <&aud2htx>;
			hdmi-out;
			constraint-rate = <44100>,
					<88200>,
					<176400>,
					<32000>,
					<48000>,
					<96000>,
					<192000>;
			status = "disabled";
		};

	sound_wm8983: sound-wm8983 {
		compatible = "simple-audio-card";
		status = "okay";
		simple-audio-card,name = "wm8983-audio";
		simple-audio-card,format = "i2s";
		simple-audio-card,frame-master = <&cpudai>;
		simple-audio-card,bitclock-master = <&cpudai>;
		simple-audio-card,widgets =
			"Headphone", "Headphone Jack",
			"Speaker", "Speaker", 
			"Line","LineIn Jack",
			"Microphone", "Microphone";
		simple-audio-card,routing =
			"Headphone Jack", "HPL",
			"Headphone Jack", "HPR",
			"Headphone Jack", "OUT4",
			"Speaker", "SPKL",
			"Speaker", "SPKR",
			"LineIn Jack", "L2",
			"LineIn Jack", "R2",
			"Microphone", "LIP",
			"Microphone", "LIN",
			"Microphone", "MICBIAS";

		cpudai: simple-audio-card,cpu {
			sound-dai = <&sai2>;
			dai-tdm-slot-num = <2>;
			dai-tdm-slot-width = <32>;
		};

		simple-audio-card,codec {
			sound-dai = <&wm8983>;
			clocks = <&clk IMX8MP_CLK_SAI2_ROOT>;
		};
	};

	sound-micfil {
		compatible = "fsl,imx-audio-micfil";
		model = "imx-audio-micfil";
		cpu-dai = <&micfil>;
	};

	backlight1: backlight1 {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 100000 0>;
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <80>;
		status = "disabled";
 	};
};

&A53_0 {
	cpu-supply = <&buck2>;
};

&A53_1 {
	cpu-supply = <&buck2>;
};

&A53_2 {
	cpu-supply = <&buck2>;
};

&A53_3 {
	cpu-supply = <&buck2>;
};

#if 0
&ddrc {
	operating-points-v2 = <&ddrc_opp_table>;
	ddrc_opp_table: opp-table {
	compatible = "operating-points-v2";
	opp-25M {
			opp-hz = /bits/ 64 <25000000>;
		};

	opp-100M {
			opp-hz = /bits/ 64 <100000000>;
		};

	opp-750M {
			opp-hz = /bits/ 64 <750000000>;
		};
	};
};
#endif

&eqos {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_eqos>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	resets = <&phy_reset>;
	reset-names = "stmmaceth";
	status = "okay";

	mdio {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@-1 {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <4>;
			eee-broken-1000t;
			eee-broken-100tx;
			at803x,eee-disabled;
			at803x,vddio-1p8v;
#if defined(ETHERNET_ONLY_100MBIT) && (ETHERNET_ONLY_100MBIT==1)
			max-speed = <100>;
			at803x,100MBit;
#endif
		};
	};
};

/* Taken from imx8mp-evk.dts and imx8mp-ddr4-evk.dts adapted */
&pcie{
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie>;
	//disable-gpio    = <&gpio_mcu 11 GPIO_ACTIVE_LOW>;
	reset-gpio      = <&gpio_mcu 11 GPIO_ACTIVE_LOW>;
	clocks = <&clk IMX8MP_CLK_HSIO_ROOT>,
			 <&clk IMX8MP_CLK_PCIE_AUX>,
			 <&clk IMX8MP_CLK_HSIO_AXI>,
			 <&clk IMX8MP_CLK_PCIE_ROOT>;
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	assigned-clocks = <&clk IMX8MP_CLK_HSIO_AXI>,
					  <&clk IMX8MP_CLK_PCIE_AUX>;
	assigned-clock-rates = <400000000>, <10000000>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_800M>,
							 <&clk IMX8MP_SYS_PLL2_50M>;
	l1ss-disabled;
	hard-wired      = <1>;
	ext_osc = <0>;
	reserved-region = <&rpmsg_reserved>;
	status = "okay";
};

&pcie_phy{
	ext_osc = <0>;
	status = "okay";
};

#if 0
&clk {
	assigned-clocks = <&clk IMX8MP_AUDIO_PLL1>, <&clk IMX8MP_AUDIO_PLL2>;
	assigned-clock-rates = <786432000>, <722534400>;
/*	assigned-clock-rates = <393216000>, <361267200>; */
};
#endif

&gpio5 {
	kukmiscinit = <1>;
};

#if 0
&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MP_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <49152000>;
	status = "okay";
};
#endif

&sai2 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai2>;
	assigned-clocks = <&clk IMX8MP_CLK_SAI2>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	status = "okay";
};

#if 0
&spdif1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_spdif1>;
	assigned-clocks = <&clk IMX8MP_CLK_SPDIF1>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <24576000>;
	clocks = <&clk IMX8MP_CLK_AUDIO_AHB>, <&clk IMX8MP_CLK_24M>,
		<&clk IMX8MP_CLK_SPDIF1>, <&clk IMX8MP_CLK_DUMMY>,
		<&clk IMX8MP_CLK_DUMMY>, <&clk IMX8MP_CLK_DUMMY>,
		<&clk IMX8MP_CLK_AUDIO_AHB>, <&clk IMX8MP_CLK_DUMMY>,
		<&clk IMX8MP_CLK_DUMMY>, <&clk IMX8MP_CLK_DUMMY>,
		<&clk IMX8MP_AUDIO_PLL1_OUT>, <&clk IMX8MP_AUDIO_PLL2_OUT>;
	clock-names = "core", "rxtx0", "rxtx1", "rxtx2", "rxtx3",
		"rxtx4", "rxtx5", "rxtx6", "rxtx7", "spba", "pll8k", "pll11k";
	status = "disabled";
};
#endif

&snvs_pwrkey {
	status = "disabled";
};

/* Set cma size to 320M */
&{/reserved-memory/linux,cma} {
	size = <0 0x14000000>;
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MP_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2_cts>;
	assigned-clocks = <&clk IMX8MP_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "disabled";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3_cts>;
	assigned-clocks = <&clk IMX8MP_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "disabled";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MP_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "disabled";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	//dr_mode = "otg";
	dr_mode = "host";
	hnp-disable;
	srp-disable;
	adp-disable;
	//usb-role-switch;
	//role-switch-default-mode = "none";
	status = "okay";
};

&usb3_phy0 {
	fsl,phy-tx-vref-tune = <0xe>;
	fsl,phy-tx-preemp-amp-tune = <3>;
	fsl,phy-tx-vboost-level = <5>;
	fsl,phy-comp-dis-tune = <7>;
	fsl,pcs-tx-deemph-3p5db = <0x21>;
	fsl,phy-pcs-tx-swing-full = <0x7f>;
	status = "okay";
};

&usb3_phy1 {
	fsl,phy-tx-preemp-amp-tune = <3>;
	fsl,phy-tx-vref-tune = <0xb>;
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	dr_mode = "host";
	status = "okay";
#if 0
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb1_vbus>;
	// in the pconx dtsi files the usb regulators are set to always on
	pinctrl_usb1_vbus: usb1grp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO14__USB2_PWR		0x19
		>;
	};
#endif
};


#if 0
&usb_otg1 {
	dr_mode = "otg";
	hnp-disable;
	srp-disable;
	adp-disable;
	usb-role-switch;
	picophy,pre-emp-curr-control = <3>;
	picophy,dc-vol-level-adjust = <7>;
	status = "okay";
};

&usb_otg2 {
	dr_mode = "host";
	hnp-disable;
	srp-disable;
	adp-disable;
	usb-role-switch;
	picophy,pre-emp-curr-control = <3>;
	picophy,dc-vol-level-adjust = <7>;
	status = "okay";
};
#endif

&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>, <&pinctrl_usdhc1_gpio>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>, <&pinctrl_usdhc1_gpio>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>, <&pinctrl_usdhc1_gpio>;
	bus-width = <8>;
	vmmc-supply = <&reg_usdhc1_vmmc>;
	non-removable;
#if 0 // TODO implement 1.8 V support
	vqmmc-supply = <&mcutouch>;
#else
	no-1-8-v;
#endif
	status = "okay";
};

#if 0
&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	cd-gpios = <spin59_gpio GPIO_ACTIVE_LOW>;
	bus-width = <4>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	pm-ignore-notify;
	keep-power-in-suspend;
#if defined(TRIZEPS8MINI_USDHC2_VQMMC_MCU) && (TRIZEPS8MINI_USDHC2_VQMMC_MCU==1)
	vqmmc-supply = <&mcutouch>;
#else
	no-1-8-v;
#endif
	status = "okay";
};
#endif

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&i2c1 { /* I2C on SODIMM 94,96 */
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";
};

&i2c2 { /* I2C on SODIMM 194,196 */
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";
};

&i2c3 { /* Internal I2C */
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";

	pmic: pca9450@25 {
		reg = <0x25>;
		compatible = "nxp,pca9450c";

		status = "okay";
		/* PMIC PCA9450 PMIC_nINT GPIO1_IO3 */
		/* IRQ not connected on Trizeps 
		pinctrl-0 = <&pinctrl_pmic>;
		interrupt-parent = <&gpio1>;
		interrupts = <3 GPIO_ACTIVE_LOW>;
		*/

		regulators {
			buck1: BUCK1 {
				regulator-name = "BUCK1";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck2: BUCK2 {
				regulator-name = "BUCK2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
				nxp,dvs-run-voltage = <950000>;
				nxp,dvs-standby-voltage = <850000>;
			};

			buck4: BUCK4{
				regulator-name = "BUCK4";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5: BUCK5{
				regulator-name = "BUCK5";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6: BUCK6 {
				regulator-name = "BUCK6";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1: LDO1 {
				regulator-name = "LDO1";
				regulator-min-microvolt = <1600000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2: LDO2 {
				regulator-name = "LDO2";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1150000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3: LDO3 {
				regulator-name = "LDO3";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4: LDO4 {
				regulator-name = "LDO4";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5: LDO5 {
				regulator-name = "LDO5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};

	wm8983: wm8983@1a {	/* Audio-Codec */
		#sound-dai-cells = <0>;
		compatible = "kuk,wm8983";
		status = "okay";
		reg = <0x1a>;
		clocks = <&clk IMX8MP_CLK_SAI2_ROOT>;
		clock-names = "mclk";
	};

#if 0
	sn65dsi84@2c {
		status = "disabled";
		compatible = "ti,sn65dsi84";
		reg = <0x2c>;
		enable-gpios =<lvds_en_gpio GPIO_ACTIVE_HIGH>;

		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c3_sn65dsi84_en>;
	};
	
	mcutouch: kuk_tr8mcu_touch@10 { /* Kinetis MCU and touch-controller */
		compatible = "kuk,kuk-tr8mcu-touch";
		reg = <0x10>;
		regulator-name = "sd_pwr";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_restouch>;
		interrupts-extended = <&gpio2 20 IRQ_TYPE_LEVEL_LOW>;
		xscale              = <800>;
		yscale              = <480>;
		xmin                = <306>;
		xmax                = <3781>;
		ymin                = <692>;
		ymax                = <3459>;
		settle              = <10>;
		average             = <25>;
		yreverse            = "true" ;
		enable_touch        = "false";
		linux,wakeup;
	};
#endif
	tr8mcu: tr8mcu@10 { /* Kinetis MCU and touch-controller */
		compatible = "seco,tr8mcu";
		reg = <0x10>;

		pinctrl-0 = <&pinctrl_tr8mcu>;
		interrupt-parent = <&gpio1>;
		interrupts = <10 GPIO_ACTIVE_LOW>;

		status = "okay";

		gpio_mcu: tr8mcu-gpios {
			compatible = "seco,tr8mcu-gpio";
			status = "okay";
			gpio-controller;
			#gpio-cells = <2>;

			// Map the 'SODIMM' offsets according to
			// https://secogroup.atlassian.net/wiki/x/KQE6Vg
			// to the gpiochipX offset 0-16
			gpio-mapping = < 2 4 6 8 14 16 18 20 87 75 99 251>;

			gpio-line-names =
				"SPIN2", "SPIN4", "SPIN6", "SPIN8",
				"SPIN14", "SPIN16", "SPIN18", "SPIN20",
				"SPIN87", "SPIN75", "SPIN99", "nPCIE_RESET";
		};
	};
};

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	status = "okay";
};

&iomuxc {
	pinctrl-names = "default";

	pinctrl_eqos: eqosgrp {
		fsl,pins = <
			MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC		0x3
			MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO		0x3
			MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x91
			MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x91
			MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x91
			MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x91
			MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK	0x91
			MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x91
			MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0	0x1f
			MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1	0x1f
			MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2	0x1f
			MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3	0x1f
			MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x1f
			MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK	0x1f

			ENET_RESET_GPIO1_IO09		0x19
		>;
	};

#if 0
	pinctrl_fec: fecgrp {
		fsl,pins = <
			MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC			0x3
			MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO		0x3
			MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3		0x1f
			MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2		0x1f
			MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1		0x1f
			MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0		0x1f
			MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3		0x91
			MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2		0x91
			MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1		0x91
			MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0		0x91
			MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK		0x1f
			MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK		0x91
			MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x91
			MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x1f
			MX8MP_IOMUXC_GPIO1_IO09__GPIO1_IO09		0x19
		>;
	};
#endif

	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C1_SCL__I2C1_SCL			0x400001c3
			MX8MP_IOMUXC_I2C1_SDA__I2C1_SDA			0x400001c3
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL			0x400001c3
			MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA			0x400001c3
		>;
	};

	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C3_SCL__I2C3_SCL			0x400001c3
			MX8MP_IOMUXC_I2C3_SDA__I2C3_SDA			0x400001c3
		>;
	};

	pinctrl_sai2: sai2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI2_MCLK__AUDIOMIX_SAI2_MCLK 0xd6
			MX8MP_IOMUXC_SAI2_RXD0__AUDIOMIX_SAI2_RX_DATA00 0xd6
			MX8MP_IOMUXC_SAI2_TXC__AUDIOMIX_SAI2_TX_BCLK 0xd6
			MX8MP_IOMUXC_SAI2_TXD0__AUDIOMIX_SAI2_TX_DATA00 0xd6
			MX8MP_IOMUXC_SAI2_TXFS__AUDIOMIX_SAI2_TX_SYNC 0xd6
		>;
	};

#if 0
	pinctrl_sai3: sai3grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI3_RXFS_SAI3_RX_SYNC     0x1d6
			MX8MP_IOMUXC_SAI3_RXC_SAI3_RX_BCLK      0x1d6
			MX8MP_IOMUXC_SAI3_RXD_SAI3_RX_DATA0     0x196
			MX8MP_IOMUXC_SAI3_TXD_SAI3_TX_DATA0     0x196
		>;
	};

	pinctrl_spdif1: spdif1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SPDIF_TX_SPDIF1_OUT	0xd6
			MX8MP_IOMUXC_SPDIF_RX_SPDIF1_IN		0xd6
		>;
	};
#endif

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART1_RXD__UART1_DCE_RX	0x140
			MX8MP_IOMUXC_UART1_TXD__UART1_DCE_TX	0x140
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x140
			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x140
		>;
	};

	pinctrl_uart2_cts: uart2ctsgrp {
		fsl,pins = <
			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x140
			MX8MP_IOMUXC_UART4_TXD__UART2_DTE_CTS	0x140
			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x140
			MX8MP_IOMUXC_UART4_RXD__UART2_DTE_RTS	0x140
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI1_SCLK__UART3_DCE_RX	0x140
			MX8MP_IOMUXC_ECSPI1_MOSI__UART3_DCE_TX	0x140
		>;
	};

	pinctrl_uart3_cts: uart3ctsgrp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI1_SCLK__UART3_DCE_RX		0x140
			MX8MP_IOMUXC_ECSPI1_SS0__UART3_DTE_CTS		0x140
			MX8MP_IOMUXC_ECSPI1_MOSI__UART3_DCE_TX		0x140
			MX8MP_IOMUXC_ECSPI1_MISO__UART3_DTE_RTS		0x140
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI2_SCLK__UART4_DCE_RX		0x140
			MX8MP_IOMUXC_ECSPI2_MOSI__UART4_DCE_TX		0x140
		>;
	};

	pinctrl_usdhc1_gpio: usdhc1grpgpio {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_RESET_B__USDHC1_RESET_B	0xc1
		>;
	};

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK		0x190
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD		0x1d0
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d0
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d0
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d0
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d0
			MX8MP_IOMUXC_SD1_DATA4__USDHC1_DATA4	0x1d0
			MX8MP_IOMUXC_SD1_DATA5__USDHC1_DATA5	0x1d0
			MX8MP_IOMUXC_SD1_DATA6__USDHC1_DATA6	0x1d0
			MX8MP_IOMUXC_SD1_DATA7__USDHC1_DATA7	0x1d0
			MX8MP_IOMUXC_SD1_STROBE__USDHC1_STROBE	0x190
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1grp100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK		0x194
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD		0x1d4
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d4
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d4
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d4
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d4
			MX8MP_IOMUXC_SD1_DATA4__USDHC1_DATA4	0x1d4
			MX8MP_IOMUXC_SD1_DATA5__USDHC1_DATA5	0x1d4
			MX8MP_IOMUXC_SD1_DATA6__USDHC1_DATA6	0x1d4
			MX8MP_IOMUXC_SD1_DATA7__USDHC1_DATA7	0x1d4
			MX8MP_IOMUXC_SD1_STROBE__USDHC1_STROBE	0x194
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1grp200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK		0x196
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD		0x1d6
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d6
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d6
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d6
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d6
			MX8MP_IOMUXC_SD1_DATA4__USDHC1_DATA4	0x1d6
			MX8MP_IOMUXC_SD1_DATA5__USDHC1_DATA5	0x1d6
			MX8MP_IOMUXC_SD1_DATA6__USDHC1_DATA6	0x1d6
			MX8MP_IOMUXC_SD1_DATA7__USDHC1_DATA7	0x1d6
			MX8MP_IOMUXC_SD1_STROBE__USDHC1_STROBE	0x196
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2grpgpio {
		fsl,pins = <
			SPIN59_GPIO		0x1c4
		>;
	};

#if 0
	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK_USDHC2_CLK		0x190
			MX8MP_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d0
			MX8MP_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d0
			MX8MP_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d0
			MX8MP_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d0
			MX8MP_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d0
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK_USDHC2_CLK		0x194
			MX8MP_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d4
			MX8MP_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d4
			MX8MP_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d4
			MX8MP_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d4
			MX8MP_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d4
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK_USDHC2_CLK		0x196
			MX8MP_IOMUXC_SD2_CMD_USDHC2_CMD		0x1d6
			MX8MP_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x1d6
			MX8MP_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x1d6
			MX8MP_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x1d6
			MX8MP_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x1d6
		>;
	};
#endif

	pinctrl_wdog: wdoggrp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO02__WDOG1_WDOG_B	0xc6
		>;
	};

	pinctrl_display_enable: display-enable 	{
		fsl,pins = < DISPLAY_ENABLE		PAD_GPIO_PU >; /* DISPLAY_ENABLE */
	};

	pinctrl_restouch: restouchgrp {
		fsl,pins = < MCU_INT_GPIO       PAD_GPIO >; /* MCU Interrupt */
	};

	pinctrl_tr8mcu: tr8mcugrp {
		fsl,pins = < MCU_INT_GPIO       PAD_GPIO >; /* MCU Interrupt */
	};

#if 0
	pinctrl_i2c3_sn65dsi84_en: sn65dsi84_iogrp {
		fsl,pins = < LVDS_EN_GPIO  PAD_GPIO  >; /* Myon internal LVDS Enable and external Pin0-72 */
	};
#endif

	pinctrl_flexcan1: flexcan1grp {
		fsl,pins = <
			SPIN97_CAN1_RX	0x00000106
			SPIN99_CAN1_TX	0x00000106
		>;
	};

	pinctrl_pcie: pciegrp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C4_SCL__PCIE_CLKREQ_B		0x61 // open drain, pull up
			/* PCIE_RESET is connected to MCU, which does not need any pinctrl */
			>;
	};
};

#if 0
&lcdif {
	status = "okay";
};
#endif

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_backlight_pwm1>;
	status = "okay";
};

&backlight1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_backlight_enable>;
	enable-gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
};

&vpu_g1 {
	status = "okay";
};

&vpu_g2 {
	status = "okay";
};

/* The VPU is currently not working, disable it to enable SW decoding by default. */
//&vpu_vc8000e {
//	status = "okay";
//};

&vpu_v4l2 {
	status = "okay";
};

&gpu_3d {
	status = "okay";
};

&gpu_2d {
	status = "okay";
};

&mix_gpu_ml {
	status = "okay";
};
